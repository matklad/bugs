Some bugs I've created *and noticed*.

1. Python. Typo in

def sorted_blocks(blocks):
    """Turn a stream of blocks into a stream of sorted blocks"""

    for block in blocks:
        yield sorted(blocks)

blocks -> block.

10 min

Fixes:

* type system
* name short lived `block` as `b`
* avoid `block` altogether, and use `map`


2. Kotlin. Iterate `Sequence` twice

fun extractErrors(lines: Sequence<String>): Sequence<RawErrorInfo> {
    val matcher = ErrorMatchingDFA()
    return sequence {
        for (line in lines) {
            matcher.feed(line)?.let { return@sequence it }
        }
        return@sequence matcher.feed(null)
    }
}

1 min

Fixes:

* Read sequence API thoroughly
* Don't ignore `constrainOnce` function and study it carefully

3. Kotlin. Fallback to the wrong default.

val pathToCargo = settings?.cargoPath ?: CargoConstants.CARGO_EXECUTABLE_NAME

5 min

Fixes:

* don't select a default for the sake of a selected default, investigate the way to signal error.
* read the documentation!
